#!/bin/bash
# This file is being maintained by Puppet.
# DO NOT EDIT

# This script removes the contents of $ramdisk_path/users/userid/directory/*
# if all files within directory is older than $days.
# 3 days before $days a mail is sent to userid that warns about the cleanup.
# When the cleanup is performed, another mail is sent and an info is sent to syslog.
# Argument 1 = days
# Argument 2 = If d, perform delete and mail.
# Michael Tosch, originally from Jonathan Bower, Johan Wennerberg
# CONFIG
days=21
date=`date`
host=`hostname`
me=${0##*/}
ramdisk_path="<%= @ramdisk_dir %>"
<% if @ramdisk_mail_bool == true -%>
message=1
<% end -%>
# END CONFIG

if [ ! -d "$ramdisk_path" ] ; then exit 1 ; fi
if [ ! -d "$ramdisk_path/users" ] ; then exit 1 ; fi

if [ -n "$1" ] ; then days=$1 ; fi
let "days_warn = $days - 3"

if [ $days_warn -lt 0 ] ; then exit 1 ; fi
if [ "$days_warn" -eq 0 ] ; then unset message ; fi

for u in "$ramdisk_path"/users/*
do
  user=${u##*/}
  warn_list=""
  del_list=""
  for i in "$u"/*/
  do
    [ -d "$i" ] || continue
    #project_name=`basename "$i"`
    if find "$i" -mtime -$days -print | grep -q .
    then
      # recent files found, no deletion
      if [ -n "$message" ]
      then
        if find "$i" -mtime -$days_warn | grep -q .
        then
          # even more recent files found, no warning
          :
        else
          # warning if not empty
          do_collect=""
          for del in "$i"* "$i".[!.]*
          do
            [ -e "$del" ] || continue
            do_collect=1
          done
          # collect warnings for mailing user
          [ -n "$do_collect" ] && warn_list="$warn_list
$i"
        fi
      fi
    else
      # only old files, deletion
      do_collect=""
      for del in "$i"* "$i".[!.]*
      do
        [ -e "$del" ] || continue
        do_collect=1
        if [ "$2" = "d" ] ; then
          rm -rf "$del"
          logger "${me}: rm -rf $del"
        else
          echo "PRETEND: rm -rf $del"
        fi
      done
      if [ -n "$message" ]
      then
        # collect deletions for mailing user
        [ -n "$do_collect" ] && del_list="$del_list
$i"
      fi
    fi
  done

  # mailing user
  if [ -n "$del_list" ]
  then
    if [ "$2" = "d" ] ; then
      echo "[Sent by $me]
The following directories on $host were emptied because all files were older than $days days: $del_list" |
      mail -s "Project directories were deleted" "$user"
    else
      echo "PRETEND: deletion mail to $user with: $del_list"
    fi
  fi
  if [ -n "$warn_list" ]
  then
    if [ "$2" = "d" ]
    then
      echo "[Sent by $me]
The following directories on $host will be emptied in 3 (or less) days if you leave them untouched: $warn_list" |
      mail -s "Project directories will be deleted in 3 days" "$user"
    else
      echo "PRETEND: warning mail to $user with: $warn_list"
    fi
  fi

done

exit 0
